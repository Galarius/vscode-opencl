/* !!! THIS FILE IS GENERATED WITH `make_man.py` SCRIPT !!!! */

import * as path from 'path';
import * as vscode from 'vscode';

export interface IEntry { brief: string, signature: string; description: string; reference: string }
export interface IEntries { [name: string]: IEntry; }

function openCLManFolder(): string {
    let extPath = vscode.extensions.getExtension('galarius.vscode-opencl').extensionPath
    return path.join(extPath, 'man', 'opencl_2_1');
}

var MAN_SIG = path.join(openCLManFolder(), 'signature')
var MAN_DESC = path.join(openCLManFolder(), 'description')

export var OpenCLSignatures: IEntries = {
clGetPlatformIDs:	{
		brief: 'Obtain the list of platforms available.',
		signature: path.join(MAN_SIG,'clGetPlatformIDs.txt'),
		description: path.join(MAN_DESC,'clGetPlatformIDs.md'),
		reference: 'http://man.opencl.org/clGetPlatformIDs.html',
	},
clGetPlatformInfo:	{
		brief: 'Get specific information about the OpenCL platform.',
		signature: path.join(MAN_SIG,'clGetPlatformInfo.txt'),
		description: path.join(MAN_DESC,'clGetPlatformInfo.md'),
		reference: 'http://man.opencl.org/clGetPlatformInfo.html',
	},
clGetDeviceIDs:	{
		brief: 'Obtain the list of devices available on a platform.',
		signature: path.join(MAN_SIG,'clGetDeviceIDs.txt'),
		description: path.join(MAN_DESC,'clGetDeviceIDs.md'),
		reference: 'http://man.opencl.org/clGetDeviceIDs.html',
	},
clGetDeviceInfo:	{
		brief: 'Get information about an OpenCL device.',
		signature: path.join(MAN_SIG,'clGetDeviceInfo.txt'),
		description: path.join(MAN_DESC,'clGetDeviceInfo.md'),
		reference: 'http://man.opencl.org/clGetDeviceInfo.html',
	},
clCreateSubDevices:	{
		brief: 'Creates an array of sub-devices that each reference a non-intersecting set of compute units within `in_device`.',
		signature: path.join(MAN_SIG,'clCreateSubDevices.txt'),
		description: path.join(MAN_DESC,'clCreateSubDevices.md'),
		reference: 'http://man.opencl.org/clCreateSubDevices.html',
	},
clReleaseDevice:	{
		brief: 'Decrements the `device` reference count.',
		signature: path.join(MAN_SIG,'clReleaseDevice.txt'),
		description: path.join(MAN_DESC,'clReleaseDevice.md'),
		reference: 'http://man.opencl.org/clReleaseDevice.html',
	},
clRetainDevice:	{
		brief: 'Increments the `device` reference count.',
		signature: path.join(MAN_SIG,'clRetainDevice.txt'),
		description: path.join(MAN_DESC,'clRetainDevice.md'),
		reference: 'http://man.opencl.org/clRetainDevice.html',
	},
clCreateContext:	{
		brief: 'Creates an OpenCL context.',
		signature: path.join(MAN_SIG,'clCreateContext.txt'),
		description: path.join(MAN_DESC,'clCreateContext.md'),
		reference: 'http://man.opencl.org/clCreateContext.html',
	},
clCreateContextFromType:	{
		brief: 'Create an OpenCL context from a device type that identifies the specific device(s) to use.',
		signature: path.join(MAN_SIG,'clCreateContextFromType.txt'),
		description: path.join(MAN_DESC,'clCreateContextFromType.md'),
		reference: 'http://man.opencl.org/clCreateContextFromType.html',
	},
clGetContextInfo:	{
		brief: 'Query information about a context.',
		signature: path.join(MAN_SIG,'clGetContextInfo.txt'),
		description: path.join(MAN_DESC,'clGetContextInfo.md'),
		reference: 'http://man.opencl.org/clGetContextInfo.html',
	},
clReleaseContext:	{
		brief: 'Decrement the context reference count.',
		signature: path.join(MAN_SIG,'clReleaseContext.txt'),
		description: path.join(MAN_DESC,'clReleaseContext.md'),
		reference: 'http://man.opencl.org/clReleaseContext.html',
	},
clRetainContext:	{
		brief: 'Increment the `context` reference count.',
		signature: path.join(MAN_SIG,'clRetainContext.txt'),
		description: path.join(MAN_DESC,'clRetainContext.md'),
		reference: 'http://man.opencl.org/clRetainContext.html',
	},
clCreateCommandQueueWithProperties:	{
		brief: 'Create a host or device command-queue on a specific device.',
		signature: path.join(MAN_SIG,'clCreateCommandQueueWithProperties.txt'),
		description: path.join(MAN_DESC,'clCreateCommandQueueWithProperties.md'),
		reference: 'http://man.opencl.org/clCreateCommandQueueWithProperties.html',
	},
clGetCommandQueueInfo:	{
		brief: 'Query information about a command-queue.',
		signature: path.join(MAN_SIG,'clGetCommandQueueInfo.txt'),
		description: path.join(MAN_DESC,'clGetCommandQueueInfo.md'),
		reference: 'http://man.opencl.org/clGetCommandQueueInfo.html',
	},
clReleaseCommandQueue:	{
		brief: 'Decrements the `command_queue` reference count.',
		signature: path.join(MAN_SIG,'clReleaseCommandQueue.txt'),
		description: path.join(MAN_DESC,'clReleaseCommandQueue.md'),
		reference: 'http://man.opencl.org/clReleaseCommandQueue.html',
	},
clRetainCommandQueue:	{
		brief: 'Increments the `command_queue` reference count.',
		signature: path.join(MAN_SIG,'clRetainCommandQueue.txt'),
		description: path.join(MAN_DESC,'clRetainCommandQueue.md'),
		reference: 'http://man.opencl.org/clRetainCommandQueue.html',
	},
clSetDefaultDeviceCommandQueue:	{
		brief: 'Replaces the default command queue on the device.',
		signature: path.join(MAN_SIG,'clSetDefaultDeviceCommandQueue.txt'),
		description: path.join(MAN_DESC,'clSetDefaultDeviceCommandQueue.md'),
		reference: 'http://man.opencl.org/clSetDefaultDeviceCommandQueue.html',
	},
clCreateBuffer:	{
		brief: 'Creates a buffer object.',
		signature: path.join(MAN_SIG,'clCreateBuffer.txt'),
		description: path.join(MAN_DESC,'clCreateBuffer.md'),
		reference: 'http://man.opencl.org/clCreateBuffer.html',
	},
clCreateSubBuffer:	{
		brief: 'Creates a new buffer object (referred to as a sub-buffer object) from an existing buffer object.',
		signature: path.join(MAN_SIG,'clCreateSubBuffer.txt'),
		description: path.join(MAN_DESC,'clCreateSubBuffer.md'),
		reference: 'http://man.opencl.org/clCreateSubBuffer.html',
	},
clEnqueueReadBuffer:	{
		brief: 'Enqueue commands to read from a buffer object to host memory.',
		signature: path.join(MAN_SIG,'clEnqueueReadBuffer.txt'),
		description: path.join(MAN_DESC,'clEnqueueReadBuffer.md'),
		reference: 'http://man.opencl.org/clEnqueueReadBuffer.html',
	},
clEnqueueWriteBuffer:	{
		brief: 'Enqueue commands to write to a buffer object from host memory.',
		signature: path.join(MAN_SIG,'clEnqueueWriteBuffer.txt'),
		description: path.join(MAN_DESC,'clEnqueueWriteBuffer.md'),
		reference: 'http://man.opencl.org/clEnqueueWriteBuffer.html',
	},
clEnqueueReadBufferRect:	{
		brief: 'Enqueue command to read from a 2D or 3D rectangular region from a buffer object to host memory.',
		signature: path.join(MAN_SIG,'clEnqueueReadBufferRect.txt'),
		description: path.join(MAN_DESC,'clEnqueueReadBufferRect.md'),
		reference: 'http://man.opencl.org/clEnqueueReadBufferRect.html',
	},
clEnqueueWriteBufferRect:	{
		brief: 'Enqueue command to write a 2D or 3D rectangular region to a buffer object from host memory.',
		signature: path.join(MAN_SIG,'clEnqueueWriteBufferRect.txt'),
		description: path.join(MAN_DESC,'clEnqueueWriteBufferRect.md'),
		reference: 'http://man.opencl.org/clEnqueueWriteBufferRect.html',
	},
clEnqueueCopyBuffer:	{
		brief: 'Enqueues a command to copy from one buffer object to another.',
		signature: path.join(MAN_SIG,'clEnqueueCopyBuffer.txt'),
		description: path.join(MAN_DESC,'clEnqueueCopyBuffer.md'),
		reference: 'http://man.opencl.org/clEnqueueCopyBuffer.html',
	},
clEnqueueCopyBufferRect:	{
		brief: 'Enqueues a command to copy a 2D or 3D rectangular region from a buffer object to another buffer object.',
		signature: path.join(MAN_SIG,'clEnqueueCopyBufferRect.txt'),
		description: path.join(MAN_DESC,'clEnqueueCopyBufferRect.md'),
		reference: 'http://man.opencl.org/clEnqueueCopyBufferRect.html',
	},
clEnqueueFillBuffer:	{
		brief: 'Enqueues a command to fill a buffer object with a pattern of a given pattern size.',
		signature: path.join(MAN_SIG,'clEnqueueFillBuffer.txt'),
		description: path.join(MAN_DESC,'clEnqueueFillBuffer.md'),
		reference: 'http://man.opencl.org/clEnqueueFillBuffer.html',
	},
clEnqueueMapBuffer:	{
		brief: 'Enqueues a command to map a region of the buffer object given by `buffer` into the host address space and returns a pointer to this mapped region.',
		signature: path.join(MAN_SIG,'clEnqueueMapBuffer.txt'),
		description: path.join(MAN_DESC,'clEnqueueMapBuffer.md'),
		reference: 'http://man.opencl.org/clEnqueueMapBuffer.html',
	},
clCreateImage:	{
		brief: 'Creates a 1D image, 1D image buffer, 1D image array, 2D image, 2D image array or 3D image object.',
		signature: path.join(MAN_SIG,'clCreateImage.txt'),
		description: path.join(MAN_DESC,'clCreateImage.md'),
		reference: 'http://man.opencl.org/clCreateImage.html',
	},
clEnqueueReadImage:	{
		brief: 'Enqueue commands to read from an image or image array object to host memory.',
		signature: path.join(MAN_SIG,'clEnqueueReadImage.txt'),
		description: path.join(MAN_DESC,'clEnqueueReadImage.md'),
		reference: 'http://man.opencl.org/clEnqueueReadImage.html',
	},
clEnqueueWriteImage:	{
		brief: 'Enqueues a command to write to an image or image array object from host memory.',
		signature: path.join(MAN_SIG,'clEnqueueWriteImage.txt'),
		description: path.join(MAN_DESC,'clEnqueueWriteImage.md'),
		reference: 'http://man.opencl.org/clEnqueueWriteImage.html',
	},
clEnqueueCopyImage:	{
		brief: 'Enqueues a command to copy image objects.',
		signature: path.join(MAN_SIG,'clEnqueueCopyImage.txt'),
		description: path.join(MAN_DESC,'clEnqueueCopyImage.md'),
		reference: 'http://man.opencl.org/clEnqueueCopyImage.html',
	},
clEnqueueCopyImageToBuffer:	{
		brief: 'Enqueues a command to copy an image object to a buffer object.',
		signature: path.join(MAN_SIG,'clEnqueueCopyImageToBuffer.txt'),
		description: path.join(MAN_DESC,'clEnqueueCopyImageToBuffer.md'),
		reference: 'http://man.opencl.org/clEnqueueCopyImageToBuffer.html',
	},
clEnqueueCopyBufferToImage:	{
		brief: 'Enqueues a command to copy a buffer object to an image object.',
		signature: path.join(MAN_SIG,'clEnqueueCopyBufferToImage.txt'),
		description: path.join(MAN_DESC,'clEnqueueCopyBufferToImage.md'),
		reference: 'http://man.opencl.org/clEnqueueCopyBufferToImage.html',
	},
clEnqueueFillImage:	{
		brief: 'Enqueues a command to fill an image object with a specified color.',
		signature: path.join(MAN_SIG,'clEnqueueFillImage.txt'),
		description: path.join(MAN_DESC,'clEnqueueFillImage.md'),
		reference: 'http://man.opencl.org/clEnqueueFillImage.html',
	},
clEnqueueMapImage:	{
		brief: 'Enqueues a command to map a region of an image object into the host address space and returns a pointer to this mapped region.',
		signature: path.join(MAN_SIG,'clEnqueueMapImage.txt'),
		description: path.join(MAN_DESC,'clEnqueueMapImage.md'),
		reference: 'http://man.opencl.org/clEnqueueMapImage.html',
	},
clGetImageInfo:	{
		brief: 'Get information specific to an image object created with clCreateImage.',
		signature: path.join(MAN_SIG,'clGetImageInfo.txt'),
		description: path.join(MAN_DESC,'clGetImageInfo.md'),
		reference: 'http://man.opencl.org/clGetImageInfo.html',
	},
clGetSupportedImageFormats:	{
		brief: 'Get the list of image formats supported by an OpenCL implementation.',
		signature: path.join(MAN_SIG,'clGetSupportedImageFormats.txt'),
		description: path.join(MAN_DESC,'clGetSupportedImageFormats.md'),
		reference: 'http://man.opencl.org/clGetSupportedImageFormats.html',
	},
cl_image_desc:	{
		brief: 'The image descriptor structure describes the type and dimensions of the image or image array and is defined as:',
		signature: path.join(MAN_SIG,'cl_image_desc.txt'),
		description: path.join(MAN_DESC,'cl_image_desc.md'),
		reference: 'http://man.opencl.org/cl_image_desc.html',
	},
cl_image_format:	{
		brief: 'The image format descriptor structure is defined as:',
		signature: path.join(MAN_SIG,'cl_image_format.txt'),
		description: path.join(MAN_DESC,'cl_image_format.md'),
		reference: 'http://man.opencl.org/cl_image_format.html',
	},
clEnqueueUnmapMemObject:	{
		brief: 'Enqueues a command to unmap a previously mapped region of a memory object.',
		signature: path.join(MAN_SIG,'clEnqueueUnmapMemObject.txt'),
		description: path.join(MAN_DESC,'clEnqueueUnmapMemObject.md'),
		reference: 'http://man.opencl.org/clEnqueueUnmapMemObject.html',
	},
clEnqueueMigrateMemObjects:	{
		brief: 'Enqueues a command to indicate which device a set of memory objects should be associated with.',
		signature: path.join(MAN_SIG,'clEnqueueMigrateMemObjects.txt'),
		description: path.join(MAN_DESC,'clEnqueueMigrateMemObjects.md'),
		reference: 'http://man.opencl.org/clEnqueueMigrateMemObjects.html',
	},
clGetMemObjectInfo:	{
		brief: 'Get information that is common to all memory objects (buffer and image objects).',
		signature: path.join(MAN_SIG,'clGetMemObjectInfo.txt'),
		description: path.join(MAN_DESC,'clGetMemObjectInfo.md'),
		reference: 'http://man.opencl.org/clGetMemObjectInfo.html',
	},
clRetainMemObject:	{
		brief: 'Increments the memory object reference count.',
		signature: path.join(MAN_SIG,'clRetainMemObject.txt'),
		description: path.join(MAN_DESC,'clRetainMemObject.md'),
		reference: 'http://man.opencl.org/clRetainMemObject.html',
	},
clReleaseMemObject:	{
		brief: 'Decrements the memory object reference count.',
		signature: path.join(MAN_SIG,'clReleaseMemObject.txt'),
		description: path.join(MAN_DESC,'clReleaseMemObject.md'),
		reference: 'http://man.opencl.org/clReleaseMemObject.html',
	},
clSetMemObjectDestructorCallback:	{
		brief: 'Registers a user callback function with a memory object.',
		signature: path.join(MAN_SIG,'clSetMemObjectDestructorCallback.txt'),
		description: path.join(MAN_DESC,'clSetMemObjectDestructorCallback.md'),
		reference: 'http://man.opencl.org/clSetMemObjectDestructorCallback.html',
	},
clCreateSamplerWithProperties:	{
		brief: 'Creates a sampler object.',
		signature: path.join(MAN_SIG,'clCreateSamplerWithProperties.txt'),
		description: path.join(MAN_DESC,'clCreateSamplerWithProperties.md'),
		reference: 'http://man.opencl.org/clCreateSamplerWithProperties.html',
	},
clReleaseSampler:	{
		brief: 'Decrements the sampler reference count.',
		signature: path.join(MAN_SIG,'clReleaseSampler.txt'),
		description: path.join(MAN_DESC,'clReleaseSampler.md'),
		reference: 'http://man.opencl.org/clReleaseSampler.html',
	},
clRetainSampler:	{
		brief: 'Increments the sampler reference count.',
		signature: path.join(MAN_SIG,'clRetainSampler.txt'),
		description: path.join(MAN_DESC,'clRetainSampler.md'),
		reference: 'http://man.opencl.org/clRetainSampler.html',
	},
clGetSamplerInfo:	{
		brief: 'Returns information about the sampler object.',
		signature: path.join(MAN_SIG,'clGetSamplerInfo.txt'),
		description: path.join(MAN_DESC,'clGetSamplerInfo.md'),
		reference: 'http://man.opencl.org/clGetSamplerInfo.html',
	},
clBuildProgram:	{
		brief: 'Builds (compiles and links) a program executable from the program source or binary.',
		signature: path.join(MAN_SIG,'clBuildProgram.txt'),
		description: path.join(MAN_DESC,'clBuildProgram.md'),
		reference: 'http://man.opencl.org/clBuildProgram.html',
	},
clCompileProgram:	{
		brief: 'Compiles a program’s source for all the devices or a specific device(s) in the OpenCL context associated with `program`.',
		signature: path.join(MAN_SIG,'clCompileProgram.txt'),
		description: path.join(MAN_DESC,'clCompileProgram.md'),
		reference: 'http://man.opencl.org/clCompileProgram.html',
	},
clCreateProgramWithSource:	{
		brief: 'Creates a program object for a context, and loads the source code specified by the text strings in the `strings` array into the program object.',
		signature: path.join(MAN_SIG,'clCreateProgramWithSource.txt'),
		description: path.join(MAN_DESC,'clCreateProgramWithSource.md'),
		reference: 'http://man.opencl.org/clCreateProgramWithSource.html',
	},
clCreateProgramWithBinary:	{
		brief: 'Creates a program object for a context, and loads the binary bits specified by `binary` into the program object.',
		signature: path.join(MAN_SIG,'clCreateProgramWithBinary.txt'),
		description: path.join(MAN_DESC,'clCreateProgramWithBinary.md'),
		reference: 'http://man.opencl.org/clCreateProgramWithBinary.html',
	},
clCreateProgramWithBuiltInKernels:	{
		brief: 'Creates a program object for a context, and loads the information related to the built-in kernels into a program object.',
		signature: path.join(MAN_SIG,'clCreateProgramWithBuiltInKernels.txt'),
		description: path.join(MAN_DESC,'clCreateProgramWithBuiltInKernels.md'),
		reference: 'http://man.opencl.org/clCreateProgramWithBuiltInKernels.html',
	},
clCreateProgramWithIL:	{
		brief: 'Creates a program object for a context, and loads the IL into the program object.',
		signature: path.join(MAN_SIG,'clCreateProgramWithIL.txt'),
		description: path.join(MAN_DESC,'clCreateProgramWithIL.md'),
		reference: 'http://man.opencl.org/clCreateProgramWithIL.html',
	},
clGetProgramBuildInfo:	{
		brief: 'Returns build information for each device in the program object.',
		signature: path.join(MAN_SIG,'clGetProgramBuildInfo.txt'),
		description: path.join(MAN_DESC,'clGetProgramBuildInfo.md'),
		reference: 'http://man.opencl.org/clGetProgramBuildInfo.html',
	},
clGetProgramInfo:	{
		brief: 'Returns information about the program object.',
		signature: path.join(MAN_SIG,'clGetProgramInfo.txt'),
		description: path.join(MAN_DESC,'clGetProgramInfo.md'),
		reference: 'http://man.opencl.org/clGetProgramInfo.html',
	},
clLinkProgram:	{
		brief: 'Links a set of compiled program objects and libraries for all the devices or a specific device(s) in the OpenCL context and creates a library or executable.',
		signature: path.join(MAN_SIG,'clLinkProgram.txt'),
		description: path.join(MAN_DESC,'clLinkProgram.md'),
		reference: 'http://man.opencl.org/clLinkProgram.html',
	},
clReleaseProgram:	{
		brief: 'Decrements the `program` reference count.',
		signature: path.join(MAN_SIG,'clReleaseProgram.txt'),
		description: path.join(MAN_DESC,'clReleaseProgram.md'),
		reference: 'http://man.opencl.org/clReleaseProgram.html',
	},
clRetainProgram:	{
		brief: 'Increments the `program` reference count.',
		signature: path.join(MAN_SIG,'clRetainProgram.txt'),
		description: path.join(MAN_DESC,'clRetainProgram.md'),
		reference: 'http://man.opencl.org/clRetainProgram.html',
	},
clUnloadPlatformCompiler:	{
		brief: 'Allows the implementation to release the resources allocated by the OpenCL compiler for `platform`.',
		signature: path.join(MAN_SIG,'clUnloadPlatformCompiler.txt'),
		description: path.join(MAN_DESC,'clUnloadPlatformCompiler.md'),
		reference: 'http://man.opencl.org/clUnloadPlatformCompiler.html',
	},
clCloneKernel:	{
		brief: 'Make a shallow copy of the kernel object.',
		signature: path.join(MAN_SIG,'clCloneKernel.txt'),
		description: path.join(MAN_DESC,'clCloneKernel.md'),
		reference: 'http://man.opencl.org/clCloneKernel.html',
	},
clCreateKernel:	{
		brief: 'Creates a kernel object.',
		signature: path.join(MAN_SIG,'clCreateKernel.txt'),
		description: path.join(MAN_DESC,'clCreateKernel.md'),
		reference: 'http://man.opencl.org/clCreateKernel.html',
	},
clCreateKernelsInProgram:	{
		brief: 'Creates kernel objects for all kernel functions in a program object.',
		signature: path.join(MAN_SIG,'clCreateKernelsInProgram.txt'),
		description: path.join(MAN_DESC,'clCreateKernelsInProgram.md'),
		reference: 'http://man.opencl.org/clCreateKernelsInProgram.html',
	},
clGetKernelInfo:	{
		brief: 'Returns information about the kernel object.',
		signature: path.join(MAN_SIG,'clGetKernelInfo.txt'),
		description: path.join(MAN_DESC,'clGetKernelInfo.md'),
		reference: 'http://man.opencl.org/clGetKernelInfo.html',
	},
clGetKernelArgInfo:	{
		brief: 'Returns information about the arguments of a kernel.',
		signature: path.join(MAN_SIG,'clGetKernelArgInfo.txt'),
		description: path.join(MAN_DESC,'clGetKernelArgInfo.md'),
		reference: 'http://man.opencl.org/clGetKernelArgInfo.html',
	},
clGetKernelSubGroupInfo:	{
		brief: 'Returns information about the kernel object.',
		signature: path.join(MAN_SIG,'clGetKernelSubGroupInfo.txt'),
		description: path.join(MAN_DESC,'clGetKernelSubGroupInfo.md'),
		reference: 'http://man.opencl.org/clGetKernelSubGroupInfo.html',
	},
clGetKernelWorkGroupInfo:	{
		brief: 'Returns information about the kernel object that may be specific to a device.',
		signature: path.join(MAN_SIG,'clGetKernelWorkGroupInfo.txt'),
		description: path.join(MAN_DESC,'clGetKernelWorkGroupInfo.md'),
		reference: 'http://man.opencl.org/clGetKernelWorkGroupInfo.html',
	},
clReleaseKernel:	{
		brief: 'Decrements the kernel reference count.',
		signature: path.join(MAN_SIG,'clReleaseKernel.txt'),
		description: path.join(MAN_DESC,'clReleaseKernel.md'),
		reference: 'http://man.opencl.org/clReleaseKernel.html',
	},
clRetainKernel:	{
		brief: 'Increments the kernel object reference count.',
		signature: path.join(MAN_SIG,'clRetainKernel.txt'),
		description: path.join(MAN_DESC,'clRetainKernel.md'),
		reference: 'http://man.opencl.org/clRetainKernel.html',
	},
clSetKernelArg:	{
		brief: 'Set the argument value for a specific argument of a kernel.',
		signature: path.join(MAN_SIG,'clSetKernelArg.txt'),
		description: path.join(MAN_DESC,'clSetKernelArg.md'),
		reference: 'http://man.opencl.org/clSetKernelArg.html',
	},
clSetKernelArgSVMPointer:	{
		brief: 'Set a SVM pointer as the argument value for a specific argument of a kernel.',
		signature: path.join(MAN_SIG,'clSetKernelArgSVMPointer.txt'),
		description: path.join(MAN_DESC,'clSetKernelArgSVMPointer.md'),
		reference: 'http://man.opencl.org/clSetKernelArgSVMPointer.html',
	},
clSetKernelExecInfo:	{
		brief: 'Pass additional information other than argument values to a kernel.',
		signature: path.join(MAN_SIG,'clSetKernelExecInfo.txt'),
		description: path.join(MAN_DESC,'clSetKernelExecInfo.md'),
		reference: 'http://man.opencl.org/clSetKernelExecInfo.html',
	},
clEnqueueNDRangeKernel:	{
		brief: 'Enqueues a command to execute a kernel on a device.',
		signature: path.join(MAN_SIG,'clEnqueueNDRangeKernel.txt'),
		description: path.join(MAN_DESC,'clEnqueueNDRangeKernel.md'),
		reference: 'http://man.opencl.org/clEnqueueNDRangeKernel.html',
	},
clEnqueueNativeKernel:	{
		brief: 'Enqueues a command to execute a native C/C++ function not compiled using the OpenCL compiler.',
		signature: path.join(MAN_SIG,'clEnqueueNativeKernel.txt'),
		description: path.join(MAN_DESC,'clEnqueueNativeKernel.md'),
		reference: 'http://man.opencl.org/clEnqueueNativeKernel.html',
	},
clCreateUserEvent:	{
		brief: 'Creates a user event object.',
		signature: path.join(MAN_SIG,'clCreateUserEvent.txt'),
		description: path.join(MAN_DESC,'clCreateUserEvent.md'),
		reference: 'http://man.opencl.org/clCreateUserEvent.html',
	},
clGetEventInfo:	{
		brief: 'Returns information about the event object.',
		signature: path.join(MAN_SIG,'clGetEventInfo.txt'),
		description: path.join(MAN_DESC,'clGetEventInfo.md'),
		reference: 'http://man.opencl.org/clGetEventInfo.html',
	},
clReleaseEvent:	{
		brief: 'Decrements the `event` reference count.',
		signature: path.join(MAN_SIG,'clReleaseEvent.txt'),
		description: path.join(MAN_DESC,'clReleaseEvent.md'),
		reference: 'http://man.opencl.org/clReleaseEvent.html',
	},
clRetainEvent:	{
		brief: 'Increments the `event` reference count.',
		signature: path.join(MAN_SIG,'clRetainEvent.txt'),
		description: path.join(MAN_DESC,'clRetainEvent.md'),
		reference: 'http://man.opencl.org/clRetainEvent.html',
	},
clSetEventCallback:	{
		brief: 'Registers a user callback function for a specific command execution status.',
		signature: path.join(MAN_SIG,'clSetEventCallback.txt'),
		description: path.join(MAN_DESC,'clSetEventCallback.md'),
		reference: 'http://man.opencl.org/clSetEventCallback.html',
	},
clSetUserEventStatus:	{
		brief: 'Sets the execution status of a user event object.',
		signature: path.join(MAN_SIG,'clSetUserEventStatus.txt'),
		description: path.join(MAN_DESC,'clSetUserEventStatus.md'),
		reference: 'http://man.opencl.org/clSetUserEventStatus.html',
	},
clWaitForEvents:	{
		brief: 'Waits on the host thread for commands identified by event objects to complete.',
		signature: path.join(MAN_SIG,'clWaitForEvents.txt'),
		description: path.join(MAN_DESC,'clWaitForEvents.md'),
		reference: 'http://man.opencl.org/clWaitForEvents.html',
	},
clEnqueueBarrierWithWaitList:	{
		brief: 'A synchronization point that enqueues a barrier operation.',
		signature: path.join(MAN_SIG,'clEnqueueBarrierWithWaitList.txt'),
		description: path.join(MAN_DESC,'clEnqueueBarrierWithWaitList.md'),
		reference: 'http://man.opencl.org/clEnqueueBarrierWithWaitList.html',
	},
clEnqueueMarkerWithWaitList:	{
		brief: 'Enqueues a marker command which waits for either a list of events to complete, or all previously enqueued commands to complete.',
		signature: path.join(MAN_SIG,'clEnqueueMarkerWithWaitList.txt'),
		description: path.join(MAN_DESC,'clEnqueueMarkerWithWaitList.md'),
		reference: 'http://man.opencl.org/clEnqueueMarkerWithWaitList.html',
	},
clGetDeviceAndHostTimer:	{
		brief: 'Returns a reasonably synchronized pair of timestamps from the device timer and the host timer as seen by device.',
		signature: path.join(MAN_SIG,'clGetDeviceAndHostTimer.txt'),
		description: path.join(MAN_DESC,'clGetDeviceAndHostTimer.md'),
		reference: 'http://man.opencl.org/clGetDeviceAndHostTimer.html',
	},
clGetEventProfilingInfo:	{
		brief: 'Returns profiling information for the command associated with event if profiling is enabled.',
		signature: path.join(MAN_SIG,'clGetEventProfilingInfo.txt'),
		description: path.join(MAN_DESC,'clGetEventProfilingInfo.md'),
		reference: 'http://man.opencl.org/clGetEventProfilingInfo.html',
	},
clGetHostTimer:	{
		brief: 'Return the current value of the host clock as seen by device.',
		signature: path.join(MAN_SIG,'clGetHostTimer.txt'),
		description: path.join(MAN_DESC,'clGetHostTimer.md'),
		reference: 'http://man.opencl.org/clGetHostTimer.html',
	},
clFlush:	{
		brief: 'Issues all previously queued OpenCL commands in a command-queue to the device associated with the command-queue.',
		signature: path.join(MAN_SIG,'clFlush.txt'),
		description: path.join(MAN_DESC,'clFlush.md'),
		reference: 'http://man.opencl.org/clFlush.html',
	},
clFinish:	{
		brief: 'Blocks until all previously queued OpenCL commands in a command-queue are issued to the associated device and have completed.',
		signature: path.join(MAN_SIG,'clFinish.txt'),
		description: path.join(MAN_DESC,'clFinish.md'),
		reference: 'http://man.opencl.org/clFinish.html',
	},
clCreatePipe:	{
		brief: 'Creates a pipe object.',
		signature: path.join(MAN_SIG,'clCreatePipe.txt'),
		description: path.join(MAN_DESC,'clCreatePipe.md'),
		reference: 'http://man.opencl.org/clCreatePipe.html',
	},
clGetPipeInfo:	{
		brief: 'Get information specific to a pipe object created with clCreatePipe.',
		signature: path.join(MAN_SIG,'clGetPipeInfo.txt'),
		description: path.join(MAN_DESC,'clGetPipeInfo.md'),
		reference: 'http://man.opencl.org/clGetPipeInfo.html',
	},
clSVMAlloc:	{
		brief: 'Allocates a shared virtual memory (SVM) buffer that can be shared by the host and all devices in an OpenCL context that support shared virtual memory.',
		signature: path.join(MAN_SIG,'clSVMAlloc.txt'),
		description: path.join(MAN_DESC,'clSVMAlloc.md'),
		reference: 'http://man.opencl.org/clSVMAlloc.html',
	},
clSVMFree:	{
		brief: 'Frees a shared virtual memory buffer allocated using clSVMAlloc.',
		signature: path.join(MAN_SIG,'clSVMFree.txt'),
		description: path.join(MAN_DESC,'clSVMFree.md'),
		reference: 'http://man.opencl.org/clSVMFree.html',
	},
clEnqueueSVMFree:	{
		brief: 'Enqueues a command to free the shared virtual memory allocated using clSVMAlloc or a shared system memory pointer.',
		signature: path.join(MAN_SIG,'clEnqueueSVMFree.txt'),
		description: path.join(MAN_DESC,'clEnqueueSVMFree.md'),
		reference: 'http://man.opencl.org/clEnqueueSVMFree.html',
	},
clEnqueueSVMMap:	{
		brief: 'Enqueues a command that will allow the host to update a region of a SVM buffer',
		signature: path.join(MAN_SIG,'clEnqueueSVMMap.txt'),
		description: path.join(MAN_DESC,'clEnqueueSVMMap.md'),
		reference: 'http://man.opencl.org/clEnqueueSVMMap.html',
	},
clEnqueueSVMMemcpy:	{
		brief: 'Enqueues a command to do a memcpy operation.',
		signature: path.join(MAN_SIG,'clEnqueueSVMMemcpy.txt'),
		description: path.join(MAN_DESC,'clEnqueueSVMMemcpy.md'),
		reference: 'http://man.opencl.org/clEnqueueSVMMemcpy.html',
	},
clEnqueueSVMMemFill:	{
		brief: 'Enqueues a command to fill a region in memory with a pattern of a given pattern size.',
		signature: path.join(MAN_SIG,'clEnqueueSVMMemFill.txt'),
		description: path.join(MAN_DESC,'clEnqueueSVMMemFill.md'),
		reference: 'http://man.opencl.org/clEnqueueSVMMemFill.html',
	},
clEnqueueSVMMigrateMem:	{
		brief: 'Enqueues a command to indicate which device a set of ranges of SVM allocations should be associated with.',
		signature: path.join(MAN_SIG,'clEnqueueSVMMigrateMem.txt'),
		description: path.join(MAN_DESC,'clEnqueueSVMMigrateMem.md'),
		reference: 'http://man.opencl.org/clEnqueueSVMMigrateMem.html',
	},
clEnqueueSVMUnmap:	{
		brief: 'Enqueues a command to indicate that the host has completed updating the region given by `svm_ptr` and which was specified in a previous call to clEnqueueSVMMap.',
		signature: path.join(MAN_SIG,'clEnqueueSVMUnmap.txt'),
		description: path.join(MAN_DESC,'clEnqueueSVMUnmap.md'),
		reference: 'http://man.opencl.org/clEnqueueSVMUnmap.html',
	}
};